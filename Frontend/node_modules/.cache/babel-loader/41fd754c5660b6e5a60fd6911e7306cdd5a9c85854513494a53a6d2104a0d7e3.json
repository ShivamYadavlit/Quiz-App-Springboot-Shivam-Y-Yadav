{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/api';\nconst PUBLIC_API_URL = 'http://localhost:8080/public';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Create a separate instance for public endpoints (no auth required)\nconst publicApi = axios.create({\n  baseURL: PUBLIC_API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to include JWT token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor to handle token expiration\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  register: userData => api.post('/auth/register', userData),\n  login: credentials => api.post('/auth/login', credentials)\n};\n\n// Quiz API\nexport const quizAPI = {\n  getAvailableQuizzes: () => publicApi.get('/quiz/available'),\n  getAllQuizzes: () => publicApi.get('/quiz/all'),\n  getQuiz: id => api.get(`/quiz/${id}`),\n  getQuizQuestions: id => api.get(`/quiz/${id}/questions`),\n  submitQuiz: submission => {\n    // Add username to submission for public endpoint\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\n    const submissionWithUser = {\n      ...submission,\n      username: user.username\n    };\n    return publicApi.post('/quiz/submit', submissionWithUser);\n  },\n  getQuizResult: id => api.get(`/quiz/results/${id}`),\n  getResult: id => api.get(`/quiz/result/${id}`),\n  getUserHistory: () => api.get('/quiz/history'),\n  getUserHistorySummary: () => api.get('/quiz/history/summary'),\n  getUserResults: () => api.get('/quiz/user-results'),\n  getLeaderboard: quizId => api.get(`/quiz/leaderboard${quizId ? `?quizId=${quizId}` : ''}`)\n};\n\n// Admin API\nexport const adminAPI = {\n  // Dashboard stats\n  getDashboardStats: () => api.get('/admin/dashboard-stats'),\n  // Quiz Management\n  createQuiz: quizData => api.post('/admin/quizzes', quizData),\n  updateQuiz: (id, quizData) => api.put(`/admin/quizzes/${id}`, quizData),\n  deleteQuiz: id => api.delete(`/admin/quizzes/${id}`),\n  getAllQuizzes: () => api.get('/admin/quizzes'),\n  // Question Management\n  createQuestion: questionData => api.post('/admin/questions', questionData),\n  updateQuestion: (id, questionData) => api.put(`/admin/questions/${id}`, questionData),\n  deleteQuestion: id => api.delete(`/admin/questions/${id}`),\n  getQuestionsByQuiz: quizId => api.get(`/admin/quizzes/${quizId}/questions`),\n  getQuizQuestions: quizId => api.get(`/admin/quiz/${quizId}/questions`),\n  // User management\n  getAllUsers: () => api.get('/admin/users'),\n  updateUserRole: (id, role) => api.put(`/admin/user/${id}/role`, {\n    role\n  }),\n  deleteUser: id => api.delete(`/admin/user/${id}`),\n  // Results management\n  getAllResults: () => api.get('/admin/results'),\n  getUserResults: userId => api.get(`/admin/user/${userId}/results`),\n  deleteResult: id => api.delete(`/admin/result/${id}`)\n};\n\n// Leaderboard API - Using public endpoints (no authentication required)\nexport const leaderboardAPI = {\n  getGlobalLeaderboard: (limit = 50) => publicApi.get(`/leaderboard/global?limit=${limit}`),\n  getQuizLeaderboard: (quizId, limit = 20) => publicApi.get(`/leaderboard/quiz/${quizId}?limit=${limit}`),\n  getTopPerformers: (limit = 20) => publicApi.get(`/leaderboard/top-performers?limit=${limit}`),\n  getWeeklyLeaderboard: (limit = 20) => publicApi.get(`/leaderboard/weekly?limit=${limit}`),\n  getMonthlyLeaderboard: (limit = 20) => publicApi.get(`/leaderboard/monthly?limit=${limit}`),\n  getRecentTopScores: (days = 7, limit = 20) => publicApi.get(`/leaderboard/recent?days=${days}&limit=${limit}`),\n  getMyRanking: (context = 10) => publicApi.get(`/leaderboard/my-ranking?context=${context}`),\n  getLeaderboardStats: () => publicApi.get('/leaderboard/stats')\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","PUBLIC_API_URL","api","create","baseURL","headers","publicApi","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","register","userData","post","login","credentials","quizAPI","getAvailableQuizzes","get","getAllQuizzes","getQuiz","id","getQuizQuestions","submitQuiz","submission","user","JSON","parse","submissionWithUser","username","getQuizResult","getResult","getUserHistory","getUserHistorySummary","getUserResults","getLeaderboard","quizId","adminAPI","getDashboardStats","createQuiz","quizData","updateQuiz","put","deleteQuiz","delete","createQuestion","questionData","updateQuestion","deleteQuestion","getQuestionsByQuiz","getAllUsers","updateUserRole","role","deleteUser","getAllResults","userId","deleteResult","leaderboardAPI","getGlobalLeaderboard","limit","getQuizLeaderboard","getTopPerformers","getWeeklyLeaderboard","getMonthlyLeaderboard","getRecentTopScores","days","getMyRanking","context","getLeaderboardStats"],"sources":["D:/aspringboot project/Quiz App/Frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8080/api';\r\nconst PUBLIC_API_URL = 'http://localhost:8080/public';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Create a separate instance for public endpoints (no auth required)\r\nconst publicApi = axios.create({\r\n  baseURL: PUBLIC_API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add request interceptor to include JWT token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor to handle token expiration\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n};\r\n\r\n// Quiz API\r\nexport const quizAPI = {\r\n  getAvailableQuizzes: () => publicApi.get('/quiz/available'),\r\n  getAllQuizzes: () => publicApi.get('/quiz/all'),\r\n  getQuiz: (id) => api.get(`/quiz/${id}`),\r\n  getQuizQuestions: (id) => api.get(`/quiz/${id}/questions`),\r\n  submitQuiz: (submission) => {\r\n    // Add username to submission for public endpoint\r\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\r\n    const submissionWithUser = { ...submission, username: user.username };\r\n    return publicApi.post('/quiz/submit', submissionWithUser);\r\n  },\r\n  getQuizResult: (id) => api.get(`/quiz/results/${id}`),\r\n  getResult: (id) => api.get(`/quiz/result/${id}`),\r\n  getUserHistory: () => api.get('/quiz/history'),\r\n  getUserHistorySummary: () => api.get('/quiz/history/summary'),\r\n  getUserResults: () => api.get('/quiz/user-results'),\r\n  getLeaderboard: (quizId) => api.get(`/quiz/leaderboard${quizId ? `?quizId=${quizId}` : ''}`),\r\n};\r\n\r\n// Admin API\r\nexport const adminAPI = {\r\n  // Dashboard stats\r\n  getDashboardStats: () => api.get('/admin/dashboard-stats'),\r\n  \r\n  // Quiz Management\r\n  createQuiz: (quizData) => api.post('/admin/quizzes', quizData),\r\n  updateQuiz: (id, quizData) => api.put(`/admin/quizzes/${id}`, quizData),\r\n  deleteQuiz: (id) => api.delete(`/admin/quizzes/${id}`),\r\n  getAllQuizzes: () => api.get('/admin/quizzes'),\r\n  \r\n  // Question Management\r\n  createQuestion: (questionData) => api.post('/admin/questions', questionData),\r\n  updateQuestion: (id, questionData) => api.put(`/admin/questions/${id}`, questionData),\r\n  deleteQuestion: (id) => api.delete(`/admin/questions/${id}`),\r\n  getQuestionsByQuiz: (quizId) => api.get(`/admin/quizzes/${quizId}/questions`),\r\n  getQuizQuestions: (quizId) => api.get(`/admin/quiz/${quizId}/questions`),\r\n  \r\n  // User management\r\n  getAllUsers: () => api.get('/admin/users'),\r\n  updateUserRole: (id, role) => api.put(`/admin/user/${id}/role`, { role }),\r\n  deleteUser: (id) => api.delete(`/admin/user/${id}`),\r\n  \r\n  // Results management\r\n  getAllResults: () => api.get('/admin/results'),\r\n  getUserResults: (userId) => api.get(`/admin/user/${userId}/results`),\r\n  deleteResult: (id) => api.delete(`/admin/result/${id}`),\r\n};\r\n\r\n// Leaderboard API - Using public endpoints (no authentication required)\r\nexport const leaderboardAPI = {\r\n  getGlobalLeaderboard: (limit = 50) => publicApi.get(`/leaderboard/global?limit=${limit}`),\r\n  getQuizLeaderboard: (quizId, limit = 20) => publicApi.get(`/leaderboard/quiz/${quizId}?limit=${limit}`),\r\n  getTopPerformers: (limit = 20) => publicApi.get(`/leaderboard/top-performers?limit=${limit}`),\r\n  getWeeklyLeaderboard: (limit = 20) => publicApi.get(`/leaderboard/weekly?limit=${limit}`),\r\n  getMonthlyLeaderboard: (limit = 20) => publicApi.get(`/leaderboard/monthly?limit=${limit}`),\r\n  getRecentTopScores: (days = 7, limit = 20) => publicApi.get(`/leaderboard/recent?days=${days}&limit=${limit}`),\r\n  getMyRanking: (context = 10) => publicApi.get(`/leaderboard/my-ranking?context=${context}`),\r\n  getLeaderboardStats: () => publicApi.get('/leaderboard/stats'),\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}