# ============================================
# Quiz Application Configuration Template
# ============================================
# Copy this file to application.properties and fill in your values

# Application Name
spring.application.name=Quiz-App

# ============================================
# Database Configuration (MongoDB)
# ============================================
# For local development, use MongoDB Atlas or local MongoDB
spring.data.mongodb.uri=mongodb://localhost:27017/quiz_app_db
# OR for MongoDB Atlas:
# spring.data.mongodb.uri=mongodb+srv://username:password@cluster.mongodb.net/?retryWrites=true&w=majority&appName=YourApp
spring.data.mongodb.database=quiz_app_db
spring.data.mongodb.auto-index-creation=true

# ============================================
# JWT Security Configuration
# ============================================
# Generate a strong secret key (at least 256 bits / 32 characters)
jwt.secret=your-256-bit-secret-key-here-change-this-in-production
# JWT Token expiration time in milliseconds (24 hours = 86400000ms)
jwt.expiration=86400000

# ============================================
# CORS Configuration
# ============================================
# Add your frontend URLs here
cors.allowed.origins=http://localhost:3000

# ============================================
# Admin Configuration
# ============================================
# Change this secret key for admin registration
admin.secret.key=your-admin-secret-key-here

# ============================================
# Server Configuration (Optional)
# ============================================
# server.port=8080
# server.servlet.context-path=/api

# ============================================
# Logging Configuration (Optional)
# ============================================
# logging.level.com.Quiz.App=DEBUG
# logging.level.org.springframework.security=DEBUG

# ============================================
# Environment-Specific Notes:
# ============================================
# Development:
# - Use localhost URLs
# - Keep default MongoDB settings
# - JWT secret can be simple for testing
#
# Production:
# - Use production MongoDB URI (Atlas or hosted)
# - Generate strong JWT secret (64+ chars)
# - Set proper CORS origins
# - Use environment variables for secrets
# - Example: jwt.secret=${JWT_SECRET:defaultsecret}
#
# Security Best Practices:
# - Never commit real secrets to version control
# - Use environment variables in production
# - Rotate secrets regularly
# - Use HTTPS in production
# ============================================