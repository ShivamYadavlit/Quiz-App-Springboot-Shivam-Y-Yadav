{"ast":null,"code":"var _jsxFileName = \"D:\\\\aspringboot project\\\\Quiz App\\\\Frontend\\\\src\\\\components\\\\AdminRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { adminAPI } from '../services/api';\nimport AdminLogin from '../pages/AdminLogin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminRoute = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    verifyAdminToken();\n  }, []);\n  const verifyAdminToken = async () => {\n    try {\n      const token = localStorage.getItem('adminToken');\n      if (!token) {\n        setIsAuthenticated(false);\n        setLoading(false);\n        return;\n      }\n      await adminAPI.verifyAdminToken();\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('Admin token verification failed:', error);\n      localStorage.removeItem('adminToken');\n      setIsAuthenticated(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleLoginSuccess = () => {\n    setIsAuthenticated(true);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center bg-gray-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n  if (isAuthenticated === false) {\n    return /*#__PURE__*/_jsxDEV(AdminLogin, {\n      onLoginSuccess: handleLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(AdminRoute, \"Im6XNksQ2UaiADl4fBdvs+sWG3E=\");\n_c = AdminRoute;\nexport default AdminRoute;\nvar _c;\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"names":["React","useState","useEffect","adminAPI","AdminLogin","jsxDEV","_jsxDEV","AdminRoute","children","_s","isAuthenticated","setIsAuthenticated","loading","setLoading","verifyAdminToken","token","localStorage","getItem","error","console","removeItem","handleLoginSuccess","className","fileName","_jsxFileName","lineNumber","columnNumber","onLoginSuccess","_c","$RefreshReg$"],"sources":["D:/aspringboot project/Quiz App/Frontend/src/components/AdminRoute.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { adminAPI } from '../services/api';\r\nimport AdminLogin from '../pages/AdminLogin';\r\n\r\nconst AdminRoute = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    verifyAdminToken();\r\n  }, []);\r\n\r\n  const verifyAdminToken = async () => {\r\n    try {\r\n      const token = localStorage.getItem('adminToken');\r\n      if (!token) {\r\n        setIsAuthenticated(false);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      await adminAPI.verifyAdminToken();\r\n      setIsAuthenticated(true);\r\n    } catch (error) {\r\n      console.error('Admin token verification failed:', error);\r\n      localStorage.removeItem('adminToken');\r\n      setIsAuthenticated(false);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleLoginSuccess = () => {\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isAuthenticated === false) {\r\n    return <AdminLogin onLoginSuccess={handleLoginSuccess} />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default AdminRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,UAAU,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdY,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;MAChD,IAAI,CAACF,KAAK,EAAE;QACVJ,kBAAkB,CAAC,KAAK,CAAC;QACzBE,UAAU,CAAC,KAAK,CAAC;QACjB;MACF;MAEA,MAAMV,QAAQ,CAACW,gBAAgB,CAAC,CAAC;MACjCH,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxDF,YAAY,CAACI,UAAU,CAAC,YAAY,CAAC;MACrCT,kBAAkB,CAAC,KAAK,CAAC;IAC3B,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMQ,kBAAkB,GAAGA,CAAA,KAAM;IAC/BV,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,IAAIC,OAAO,EAAE;IACX,oBACEN,OAAA;MAAKgB,SAAS,EAAC,0DAA0D;MAAAd,QAAA,eACvEF,OAAA;QAAKgB,SAAS,EAAC;MAAgE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF,CAAC;EAEV;EAEA,IAAIhB,eAAe,KAAK,KAAK,EAAE;IAC7B,oBAAOJ,OAAA,CAACF,UAAU;MAACuB,cAAc,EAAEN;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3D;EAEA,OAAOlB,QAAQ;AACjB,CAAC;AAACC,EAAA,CA7CIF,UAAU;AAAAqB,EAAA,GAAVrB,UAAU;AA+ChB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}